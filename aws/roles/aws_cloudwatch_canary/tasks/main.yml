  - name: "Add application"
    ansible.controller.application:
      name: "{{ bucket }}"
      description: "{{ bucket }} deployment"
      organization: "Default"
      state: present
      authorization_grant_type: password
      client_type: confidential

  - name: Get current tokens
    ansible.builtin.uri:
      url: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}/api/v2/tokens/"
      method: GET
      force_basic_auth: yes
      body_format: json
      url_username: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
      url_password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
      return_content: yes
      status_code: 200
      validate_certs: no
    register: token_json

  - name: Delete token if already exists      
    ansible.controller.token: 
      existing_token_id: "{{ item.id | string }}"
      state: absent
    with_items: "{{ token_json.json.results }}"
    when: item.description == "{{ bucket }}"

  - name: Create a new AAP token 
    ansible.controller.token:
      description: "{{ bucket }}"
      application: "{{ bucket }}"
      scope: "write"
      state: present
    register: aap_token

#  - debug: msg="{{ aap_token }}"

#  - name: Create bucket for monitoring logs
#    amazon.aws.s3_object:
#      region: "{{ region }}"
#      bucket: "{{ bucket }}-canary"
#      mode: create
#      tags:
#        purpose: "{{ bucket }}"
#
#  - name: Parse policy template
#    ansible.builtin.template:
#      src: canary.j2
#      dest: canary.json
#    run_once: true
#
#  - name: Delete previous monitoring stack via cloudformation
#    amazon.aws.cloudformation:
#      stack_name: "{{ bucket }}-canary-stack"
#      state: "absent"
#      region: "{{ region }}"
#    run_once: true
#
#  - name: Create Cloudwatch monitoring stack
#    amazon.aws.cloudformation:
#      stack_name: "{{ bucket }}-canary-stack"
#      state: "present"
#      region: "{{ region }}"
#      disable_rollback: false
#      template: "canary.json"
#      tags:
#        purpose: "{{ bucket }}"
#    run_once: true
