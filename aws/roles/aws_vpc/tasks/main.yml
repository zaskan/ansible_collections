---
# tasks file for aws_vpc
  - name: Create VPC
    amazon.aws.ec2_vpc_net:
      name: "{{ bucket }}-vpc"
      cidr_block: 10.10.0.0/16
      region: "{{ region }}"
      tags:
        Name: "{{ bucket }} VPC"
        purpose: "{{ bucket }}"
      tenancy: default
    register: vpc

  - name: Add VPC to CMDB
    servicenow.itsm.configuration_item:
      instance:
        host: "https://{{ lookup('env','SN_HOST') }}"
      sys_class_name: cmdb_ci_aws_datacenter
      name: "{{ bucket }}_VPC }}"
      other:
        region: "{{ region }}"
        manufacturer: "AWS Web Services"
        asset_tag: "{{ vpc.vpc.id }}"
      short_description: "VPC network for {{ bucket }}"

  - name: Create local subnet
    amazon.aws.ec2_vpc_subnet:
      region: "{{ region }}"
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: 10.10.1.0/24
      tags:
        Name: "Private Subnet for {{ bucket }}"
        purpose: "{{ bucket }}"
    register: localsubnet

  - name: Create public subnet
    amazon.aws.ec2_vpc_subnet:
      region: "{{ region }}"
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: 10.10.2.0/24
      tags:
        Name: "Public Subnet for {{ bucket }}"
        purpose: "{{ bucket }}"
    register: publicsubnet

  - name: Create security group
    amazon.aws.ec2_group:
      region: "{{ region }}"
      name: "{{ bucket }}-sg"
      description: "Security group for {{ bucket }}"
      vpc_id: "{{ vpc.vpc.id }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
      tags:
        Name: "Security group for {{ bucket }}"
        purpose: "{{ bucket }}"
    register: sg

  - name: Get nat gateways with specific filter
    amazon.aws.ec2_vpc_nat_gateway_info:
      region: "{{ region }}"
      filters:
        subnet-id: "{{ publicsubnet.subnet.id }}"
    register: existing_nat_gateways

  - name: Allocate a new elastic IP
    community.aws.ec2_eip:
      state: present
      tag_name: purpose
      tag_value: "{{ bucket }}"
      tags:
        Name: "Elastic IP for for {{ bucket }}"
        purpose: "{{ bucket }}"
      reuse_existing_ip_allowed: true
      in_vpc: true
      region: "{{ region }}"
    register: eip
    when: existing_nat_gateways.result | length == 0

  - name: Create Internet gateway
    amazon.aws.ec2_vpc_igw:
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ region }}"
      state: present
      tags:
        Name: "Internet gateway for {{ bucket }}"
        purpose: "{{ bucket }}"
    register: igw

  - name: Create nat gateway
    amazon.aws.ec2_vpc_nat_gateway:
      state: present
      subnet_id: "{{ publicsubnet.subnet.id }}"
      eip_address: "{{ eip.public_ip }}"
      if_exist_do_not_create: yes
      wait: true
      region: "{{ region }}"
      tags:
        Name: "Nat gateway for {{ bucket }}"
        purpose: "{{ bucket }}"
    when: existing_nat_gateways.result | length == 0
    register: nat

  - name: Create route table for private interface and point to nat gateway
    amazon.aws.ec2_vpc_route_table:
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ localsubnet.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ nat.nat_gateway_id }}"
      tags:
        Name: "Private Route for {{ bucket }}"
        purpose: "{{ bucket }}"
    register: nat_gateway_route_table
    when: existing_nat_gateways.result | length == 0

  - name: Create route table for public interface and point to internet gateway
    amazon.aws.ec2_vpc_route_table:
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ publicsubnet.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
      tags:
        Name: "Public Route for {{ bucket }}"
        purpose: "{{ bucket }}"
    register: gateway_route_table

